// Compiled by ClojureScript 1.10.238 {:static-fns true, :optimize-constants true}
goog.provide('javelin_timesync.spec');
goog.require('cljs.core');
goog.require('cljs.core.constants');
goog.require('cljs.spec.alpha');
cljs.spec.alpha.def_impl(cljs.core.cst$kw$timesync_SLASH_stamp,cljs.core.cst$sym$cljs$core_SLASH_int_QMARK_,cljs.core.int_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$timesync_SLASH_offset,cljs.core.cst$kw$timesync_SLASH_stamp,cljs.core.cst$kw$timesync_SLASH_stamp);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$timesync_SLASH_start,cljs.core.cst$kw$timesync_SLASH_stamp,cljs.core.cst$kw$timesync_SLASH_stamp);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$timesync_SLASH_server,cljs.core.cst$kw$timesync_SLASH_stamp,cljs.core.cst$kw$timesync_SLASH_stamp);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$timesync_SLASH_end,cljs.core.cst$kw$timesync_SLASH_stamp,cljs.core.cst$kw$timesync_SLASH_stamp);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$timesync_SLASH_data_DASH_point,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$req,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$timesync_SLASH_start,cljs.core.cst$kw$timesync_SLASH_server,cljs.core.cst$kw$timesync_SLASH_end], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,null,null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__10792){
return cljs.core.map_QMARK_(G__10792);
}),(function (G__10792){
return cljs.core.contains_QMARK_(G__10792,cljs.core.cst$kw$timesync_SLASH_start);
}),(function (G__10792){
return cljs.core.contains_QMARK_(G__10792,cljs.core.cst$kw$timesync_SLASH_server);
}),(function (G__10792){
return cljs.core.contains_QMARK_(G__10792,cljs.core.cst$kw$timesync_SLASH_end);
})], null),(function (G__10792){
return ((cljs.core.map_QMARK_(G__10792)) && (cljs.core.contains_QMARK_(G__10792,cljs.core.cst$kw$timesync_SLASH_start)) && (cljs.core.contains_QMARK_(G__10792,cljs.core.cst$kw$timesync_SLASH_server)) && (cljs.core.contains_QMARK_(G__10792,cljs.core.cst$kw$timesync_SLASH_end)));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$timesync_SLASH_start,cljs.core.cst$kw$timesync_SLASH_server,cljs.core.cst$kw$timesync_SLASH_end], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$timesync_SLASH_start,cljs.core.cst$kw$timesync_SLASH_server,cljs.core.cst$kw$timesync_SLASH_end], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$timesync_SLASH_start,cljs.core.cst$kw$timesync_SLASH_server,cljs.core.cst$kw$timesync_SLASH_end], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_)),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_contains_QMARK_,cljs.core.cst$sym$_PERCENT_,cljs.core.cst$kw$timesync_SLASH_start)),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_contains_QMARK_,cljs.core.cst$sym$_PERCENT_,cljs.core.cst$kw$timesync_SLASH_server)),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_contains_QMARK_,cljs.core.cst$sym$_PERCENT_,cljs.core.cst$kw$timesync_SLASH_end))], null),null])));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$timesync_SLASH_data_DASH_points,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$kw$timesync_SLASH_data_DASH_point,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_vector_QMARK_),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.cst$kw$timesync_SLASH_data_DASH_point,cljs.core.cst$kw$timesync_SLASH_data_DASH_point,new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_vector_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__10793){
return cljs.core.vector_QMARK_(G__10793);
}),cljs.core.cst$kw$kind,cljs.core.vector_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$kw$timesync_SLASH_data_DASH_point,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_vector_QMARK_)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$timesync_SLASH_latency,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.number_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$timesync_SLASH_clock_DASH_delta,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.number_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$timesync_SLASH_data_DASH_point_DASH__DASH_processed,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_merge,cljs.core.cst$kw$timesync_SLASH_data_DASH_point,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$timesync_SLASH_latency,cljs.core.cst$kw$timesync_SLASH_clock_DASH_delta], null))),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$timesync_SLASH_data_DASH_point,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$timesync_SLASH_latency,cljs.core.cst$kw$timesync_SLASH_clock_DASH_delta], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$timesync_SLASH_data_DASH_point,cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,null,null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__10794){
return cljs.core.map_QMARK_(G__10794);
}),(function (G__10794){
return cljs.core.contains_QMARK_(G__10794,cljs.core.cst$kw$timesync_SLASH_latency);
}),(function (G__10794){
return cljs.core.contains_QMARK_(G__10794,cljs.core.cst$kw$timesync_SLASH_clock_DASH_delta);
})], null),(function (G__10794){
return ((cljs.core.map_QMARK_(G__10794)) && (cljs.core.contains_QMARK_(G__10794,cljs.core.cst$kw$timesync_SLASH_latency)) && (cljs.core.contains_QMARK_(G__10794,cljs.core.cst$kw$timesync_SLASH_clock_DASH_delta)));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$timesync_SLASH_latency,cljs.core.cst$kw$timesync_SLASH_clock_DASH_delta], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$timesync_SLASH_latency,cljs.core.cst$kw$timesync_SLASH_clock_DASH_delta], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$timesync_SLASH_latency,cljs.core.cst$kw$timesync_SLASH_clock_DASH_delta], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_)),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_contains_QMARK_,cljs.core.cst$sym$_PERCENT_,cljs.core.cst$kw$timesync_SLASH_latency)),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_contains_QMARK_,cljs.core.cst$sym$_PERCENT_,cljs.core.cst$kw$timesync_SLASH_clock_DASH_delta))], null),null]))], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$timesync_SLASH_data_DASH_points_DASH__DASH_processed,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$kw$timesync_SLASH_data_DASH_point_DASH__DASH_processed,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_vector_QMARK_),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.cst$kw$timesync_SLASH_data_DASH_point_DASH__DASH_processed,cljs.core.cst$kw$timesync_SLASH_data_DASH_point_DASH__DASH_processed,new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_vector_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__10795){
return cljs.core.vector_QMARK_(G__10795);
}),cljs.core.cst$kw$kind,cljs.core.vector_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$kw$timesync_SLASH_data_DASH_point_DASH__DASH_processed,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_vector_QMARK_)], null),null));
